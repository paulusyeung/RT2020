<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAIcAAAAAAJ2dyKio0rCwzqamwsPD4aKit93d7qWlrpSUmoODiMzM08TEymtrbdTU1ra7
        24eKmtbX3Hp8hHN1fIyVr8nT5XiAjavT+5Kx0JKis6W1xmxucJa94tXp/JSan87U2cbLz7/Q2aytrf//
        m7OzicbGnoODcv//8f//+fXymfz6pf/+xv/6lOznl//8uv/90v/93f/+6P/4kv/zjv70lObZc/n11+DO
        aPflf//uif/rhf/shvPgg/Tdd//ogs2zTf/lgNSzTe/Ra/7eecqoRfrUbv/bdf7jk+zixfnRa/7Vb/7X
        cf/osd+1VP/Ra//Sbf/UdP/WeP/lq2ZMGc2fP72RO92sRltHHfTCXP/KZP7MZv/OaNWsV0k9Jf/qwWlm
        YJlmBapvCax3FuevSfW7Ve26X2lWM9m0bjk1LrV1D8uSMPS0Tu6yTPm4Uvq+WP7CXYxrNmdQKevTq3dw
        ZMmBG8B+GqFrG9ePKdOPKYhdHd2YNK97KndVIvKvSfiyTPe1T/+5U/+6VP+9V8iYUHpfN6mFUv7MgPLO
        l6iScnVqWYZ9cLt2Hc6HI9aLJdyQLeabNfGkPuaePfClQPapQ/2wSvuvSf+yTP60TmFKKoZ3Y4l/ctWE
        INyKJOSSLPOdN/OgOtmONf+tR4VbJpp0RlNEMdm3jOKLKPCTLfibNfmhO/+jPf+kPv+mQPqtV/u0Z+HK
        sf/s1vuXMf+ZM/6eOOOONf6ePvKcQ/2lS/ShTOLVyNTOyP7+/vr6+vX19fPz8/Dw8O3t7erq6ubm5uXl
        5ePj4+Hh4d/f39zc3NnZ2dfX19TU1NHR0c7OzszMzMnJycbGxsHBwb6+vry8vLq6urm5ube3t7S0tLOz
        s7Gxsa6urqurq6mpqaenp6SkpKOjo6CgoJ+fn5ycnJubm5mZmZaWlpSUlJKSko6OjoyMjIuLi4aGhoOD
        g4GBgX5+fnp6enZ2dnNzc3FxcWZmZmRkZGNjY11dXVhYWFZWVktLS0VFRT8/Pz09PTk5OTY2NjAwMAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAMAAwAAAI/wCdCRxIUCC6gwgRFlzIsKFDZ+Tk
        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
</value>
  </data>
</root>